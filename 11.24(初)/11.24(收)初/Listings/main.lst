C51 COMPILER V9.54   MAIN                                                                  12/03/2024 15:50:04 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          //#include "key_multi.h"
   4          #include "UART.h"
   5          
   6          #define uchar unsigned char
   7          #define uint unsigned int
   8          #define length 2
   9          
  10          sbit PWMIN1 = P2^6;
  11          sbit PWMIN2 = P2^7;
  12          sbit Key1 = P1^3;
  13          sbit Key5 = P1^7;
  14          
  15          uchar state,key,High1,Low1,flag1,High5,Low5,flag5;
  16          uchar f1,DR1,f2,DR2,QS,HS;
  17          uchar time11,time12,time13,time14,lasts1,nows1,time21,time22,time23,time24,lasts2,nows2;
  18          uchar i,temp1,temp2,display1[length],display2[length],mood21,mood22,mood11,mood12;
  19          uint time,counter;
  20          
  21          uchar HighRH1,HighRL1,LowRH1,LowRL1,HighRH2,HighRL2,LowRH2,LowRL2,mood1,mood2;
  22          uchar count1,count2,state2;
  23          
  24          uchar code led_code1[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};//原
  25          uchar code led_code2[] = {0x50, 0x5F, 0x32, 0x16, 0x1D, 0x94, 0x90, 0x5E, 0x10, 0x14, 0xEF};//0-9 .  新
  26          
  27          void Timer0_Isr(void) interrupt 1
  28          {
  29   1              TL0 = 0x66;                             //设置定时初始值
  30   1              TH0 = 0xFC;                             //设置定时初始值
  31   1      //      counter++;
  32   1              
  33   1              time11++;               
  34   1              lasts1 = nows1;                         //第一列波测波
  35   1              nows1 = PWMIN1;
  36   1              switch(mood1)
  37   1              {
  38   2                      case 0:
  39   2                      {
  40   3                              if(lasts1 == 0 && nows1 == 1)
  41   3                              {
  42   4                                      time12 = time11;
  43   4                                      mood1 = 1;
  44   4                              }
  45   3                      }break;
  46   2                      case 1:
  47   2                      {
  48   3                              if(lasts1 == 1 && nows1 == 0 )
  49   3                              {
  50   4                                      time13 = time11;
  51   4                                      mood1 = 2;
  52   4                              }
  53   3                      }break;
  54   2                      case 2:
C51 COMPILER V9.54   MAIN                                                                  12/03/2024 15:50:04 PAGE 2   

  55   2                      {
  56   3                              if(lasts1 == 0 && nows1 == 1 )
  57   3                              {                                       
  58   4                                      time14 = time11;
  59   4                                      mood1 = 3;
  60   4                              }
  61   3                      }break;
  62   2              }
  63   1              
  64   1              time21++;               
  65   1              lasts2 = nows2;                         //第二列波测波
  66   1              nows2 = PWMIN2;
  67   1              switch (mood2)
  68   1              {
  69   2                      case 0:
  70   2                      {
  71   3                              if(lasts2 == 0 && nows2 == 1)
  72   3                              {
  73   4                                      time22 = time21;
  74   4                                      mood2 = 1;
  75   4                              }
  76   3                      }break;
  77   2                      case 1:
  78   2                      {
  79   3                              if(lasts2 == 1 && nows2 == 0 )
  80   3                              {
  81   4                                      time23 = time21;
  82   4                                      mood2 = 2;
  83   4                              }
  84   3                      }break;
  85   2                      case 2:
  86   2                      {
  87   3                              if(lasts2 == 0 && nows2 == 1 )
  88   3                              {                                       
  89   4                                      time24 = time21;
  90   4                                      mood2 = 3;
  91   4                              }
  92   3                      }break;
  93   2              }
  94   1      }
  95          
  96          void Timer0_Init(void)          //1000微秒@11.0592MHz
  97          {
  98   1              TMOD &= 0xF0;                   //设置定时器模式
  99   1              TMOD |= 0x01;                   //设置定时器模式
 100   1              TL0 = 0x66;                             //设置定时初始值
 101   1              TH0 = 0xFC;                             //设置定时初始值
 102   1              TF0 = 0;                                //清除TF0标志
 103   1              TR0 = 1;                                //定时器0开始计时
 104   1              ET0 = 1;                                //使能定时器0中断
 105   1              PT0 = 1;
 106   1      }
 107          
 108          void Nixie(unsigned char Location, Number)                      //数码管显示
 109          {
 110   1      //      switch(state)
 111   1      //      {
 112   1      //              case 0:
 113   1      //              {
 114   1                              switch(Location)
 115   1                              {
 116   2                                      case 1:P3_5=0;P3_4=0;P3_3=0;P3_2=1;break;
C51 COMPILER V9.54   MAIN                                                                  12/03/2024 15:50:04 PAGE 3   

 117   2                                      case 2:P3_5=0;P3_4=0;P3_3=1;P3_2=0;break;
 118   2                                      case 3:P3_5=0;P3_4=1;P3_3=0;P3_2=0;break;
 119   2                                      case 4:P3_5=1;P3_4=0;P3_3=0;P3_2=0;break;
 120   2                              }
 121   1                              P0 = led_code2[Number];
 122   1                              Delay(1); 
 123   1                              P0 = 0xFF;
 124   1      //              }break;
 125   1      //              case 1:
 126   1      //              {
 127   1      //                      switch(Location)
 128   1      //                      {
 129   1      //                              case 1:P2_4=1;P2_3=1;P2_2=1;break;
 130   1      //                              case 2:P2_4=1;P2_3=1;P2_2=0;break;
 131   1      //                              case 3:P2_4=1;P2_3=0;P2_2=1;break;
 132   1      //                              case 4:P2_4=1;P2_3=0;P2_2=0;break;
 133   1      //                              case 5:P2_4=0;P2_3=1;P2_2=1;break;
 134   1      //                              case 6:P2_4=0;P2_3=1;P2_2=0;break;
 135   1      //                              case 7:P2_4=0;P2_3=0;P2_2=1;break;
 136   1      //                              case 8:P2_4=0;P2_3=0;P2_2=0;break;
 137   1      //                      }
 138   1      //                      P0=led_code1[Number];
 139   1      //                      Delay(1); 
 140   1      //                      P0=0x00;
 141   1      //              }break;
 142   1      //      }
 143   1      }
 144          
 145          void Lvbo(uchar *n,num)
 146          {
 147   1              for(i = 1; i < num + 1; i++)
 148   1              {
 149   2                      if(*n > (10 * i - 5) && *n < (10 * i + 5)) *n = 10 * i;
 150   2              }
 151   1      }
 152          
 153          void main()
 154          {
 155   1              EA = 1;
 156   1              UART_Init();
 157   1              Timer0_Init();
 158   1              f1 = 10;
 159   1              DR1 = 50;
 160   1              f2 = 20;
 161   1              DR2 = 60;
 162   1              QS = f1;
 163   1              HS = DR1;
 164   1              while(1)
 165   1              {
 166   2                      if(mood1 == 3)
 167   2                      {
 168   3                              f1 = 1000 / (time14 - time12);
 169   3                              DR1 = 100 * (time13 - time12) / (time14 - time12);
 170   3                              time11 = 0;
 171   3                              mood1 = 0;      
 172   3                      }
 173   2                      if(mood2 == 3)
 174   2                      {
 175   3                              f2 = 1000 / (time24 - time22);
 176   3                              DR2 = 100 * (time23 - time22) / (time24 - time22);
 177   3                              time21 = 0;
 178   3                              mood2 = 0;      
C51 COMPILER V9.54   MAIN                                                                  12/03/2024 15:50:04 PAGE 4   

 179   3                      }
 180   2                      Lvbo(&f1,5);Lvbo(&DR1,9);Lvbo(&f2,5);Lvbo(&DR2,9);
 181   2                      
 182   2                      if(Key1 == 0 && flag1 == 0)                                                                                                                     
 183   2                      {
 184   3                              High1++;
 185   3                              if(High1 >= 1)                          //按下检测>=10ms
 186   3                              {
 187   4                                      High1 = 0;
 188   4                                      flag1 = 1;
 189   4                              }
 190   3                      }
 191   2                      else if(Key1 != 0 && flag1 == 1)
 192   2                      {
 193   3                              Low1++;
 194   3                              if(Low1 >= 1)                           //松开检测>=10ms
 195   3                              {
 196   4                                      key++;
 197   4                                      key %= 2;
 198   4                                      P2_0 =~ P2_0;
 199   4                                      flag1 = 0;
 200   4                              }
 201   3                      }
 202   2                      if(!key) {QS = f1;HS = DR1;}
 203   2                      else {QS = f2;HS = DR2;}
 204   2                      
 205   2                      temp1 = QS;
 206   2                      temp2 = HS;
 207   2                      for(i = 0; i < length; i++)                                                                     //前两位显示
 208   2                      {
 209   3                              display1[length - i - 1] = temp1 % 10;
 210   3                              temp1 /= 10;
 211   3                              Nixie(i + 1, display1[i]);
 212   3                      }
 213   2                      for(i = 0; i < length; i++)                                                                     //后两位显示
 214   2                      {
 215   3                              display2[length - i - 1] = temp2 % 10;
 216   3                              temp2 /= 10;
 217   3                              Nixie(i + 3, display2[i]);
 218   3                      }
 219   2      //              if(counter >= 1000)
 220   2      //              {
 221   2      //                      counter = 0;
 222   2      ////                    P2_0 =~ P2_0;
 223   2      //                      UART_SendByte1('c');UART_SendByte1('h');UART_SendByte1('1');UART_SendByte1(':');UART_SendByte1('f');U
             -ART_SendByte1('=');
 224   2      //                      UART_SendByte2(f1);
 225   2      //                      UART_SendByte1(',');UART_SendByte1('d');UART_SendByte1('=');
 226   2      //                      UART_SendByte2(DR1);
 227   2      //                      UART_SendByte1(';');
 228   2      //                      UART_SendByte1('c');UART_SendByte1('h');UART_SendByte1('2');UART_SendByte1(':');UART_SendByte1('f');U
             -ART_SendByte1('=');
 229   2      //                      UART_SendByte2(f2);
 230   2      //                      UART_SendByte1(',');UART_SendByte1('d');UART_SendByte1('=');
 231   2      //                      UART_SendByte2(DR2);
 232   2      //                      UART_SendByte1(';');
 233   2      //              }
 234   2              }
 235   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.54   MAIN                                                                  12/03/2024 15:50:04 PAGE 5   

   CODE SIZE        =    714    ----
   CONSTANT SIZE    =     21    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     54       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
